{"remainingRequest":"D:\\Vue\\VueRBACModel\\VueRBAC\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Vue\\VueRBACModel\\VueRBAC\\src\\views\\member\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Vue\\VueRBACModel\\VueRBAC\\src\\views\\member\\index.vue","mtime":1626151017237},{"path":"D:\\Vue\\VueRBACModel\\VueRBAC\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Vue\\VueRBACModel\\VueRBAC\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Vue\\VueRBACModel\\VueRBAC\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Vue\\VueRBACModel\\VueRBAC\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBmZXRjaExpc3QsIGNyZWF0ZU1lbWJlciwgdXBkYXRlTWVtYmVyIH0gZnJvbSAnQC9hcGkvbWVtYmVyJw0KaW1wb3J0IHsgcGFyc2VUaW1lIH0gZnJvbSAnQC91dGlscycNCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gJ0AvY29tcG9uZW50cy9QYWdpbmF0aW9uJyAvLyBzZWNvbmRhcnkgcGFja2FnZSBiYXNlZCBvbiBlbC1wYWdpbmF0aW9uDQoNCmNvbnN0IHVzZXJUeXBlT3B0aW9ucyA9IFsNCiAgeyBrZXk6ICdhZG1pbicsIGRpc3BsYXlfbmFtZTogJ+euoeeQhuWRmChhZG1pbiknIH0sDQogIHsga2V5OiAnZWRpdG9yJywgZGlzcGxheV9uYW1lOiAn57yW6L6RKGVkaXRvciknIH0sDQogIHsga2V5OiAndmlzaXRvcicsIGRpc3BsYXlfbmFtZTogJ+a4uOWuoih2aXNpdG9yKScgfQ0KXQ0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsgUGFnaW5hdGlvbiB9LA0KICBmaWx0ZXJzOiB7DQogICAgc3RhdHVzRmlsdGVyKHN0YXR1cykgew0KICAgICAgY29uc3Qgc3RhdHVzTWFwID0geyBwdWJsaXNoZWQ6ICdzdWNjZXNzJywgZHJhZnQ6ICdncmF5JywgZGVsZXRlZDogJ2RhbmdlcicNCiAgICAgIH0NCiAgICAgIHJldHVybiBzdGF0dXNNYXBbc3RhdHVzXQ0KICAgIH0sDQogICAgcGFyc2VUaW1lKHRpbWUsIGNGb3JtYXQpIHsNCiAgICAgIHJldHVybiBwYXJzZVRpbWUodGltZSwgY0Zvcm1hdCkNCiAgICB9DQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGxpc3Q6IG51bGwsDQogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwNCiAgICAgIHRvdGFsOiAwLA0KICAgICAgbGlzdFF1ZXJ5OiB7IHBhZ2U6IDEsIGxpbWl0OiAyMCwgdXNlcm5hbWU6IHVuZGVmaW5lZCwgdHlwZTogdW5kZWZpbmVkLCBzb3J0OiAnK2lkJw0KICAgICAgfSwNCiAgICAgIHVzZXJUeXBlT3B0aW9ucywNCiAgICAgIHNvcnRPcHRpb25zOiBbeyBsYWJlbDogJ0lEIEFzY2VuZGluZycsIGtleTogJytpZCcgfSwgeyBsYWJlbDogJ0lEIERlc2NlbmRpbmcnLCBrZXk6ICctaWQnIH0NCiAgICAgIF0sDQogICAgICB0ZW1wOiB7IGlkOiB1bmRlZmluZWQsIHJlbWFyazogJycsIHRpbWVzdGFtcDogbmV3IERhdGUoKSwgdXNlcm5hbWU6ICcnLCBwYXNzd29yZDogJycsIHR5cGU6ICcnfSwNCiAgICAgIGRpYWxvZ0Zvcm1WaXNpYmxlOiBmYWxzZSwNCiAgICAgIGRpYWxvZ1N0YXR1czogJycsDQogICAgICB0ZXh0TWFwOiB7IHVwZGF0ZTogJ+e8lui+kScsIGNyZWF0ZTogJ+aWsOW7uicgfSwNCiAgICAgIC8vIOe8lui+keeUqOaIt+S/oeaBry3ooajljZXpqozor4ENCiAgICAgIHJ1bGVzOiB7DQogICAgICAgIHVzZXJuYW1lOiBbew0KICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAndXNlcm5hbWUgaXMgcmVxdWlyZWQnLCB0cmlnZ2VyOiAnYmx1cicgfV0sDQogICAgICAgIHBhc3N3b3JkOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ3Bhc3N3b3JkIGlzIHJlcXVpcmVkJywgdHJpZ2dlcjogJ2JsdXInIH1dLA0KICAgICAgICB0eXBlOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ3R5cGUgaXMgcmVxdWlyZWQnLCB0cmlnZ2VyOiAnY2hhbmdlJyB9XSwNCiAgICAgICAgdGltZXN0YW1wOiBbeyB0eXBlOiAnZGF0ZScsIHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAndGltZXN0YW1wIGlzIHJlcXVpcmVkJywgdHJpZ2dlcjogJ2NoYW5nZScgfV0NCiAgICAgIH0NCiAgICB9DQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5mZXRjaERhdGEoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgLy8gZ2V0IG1lbWViZXJzIGxpc3QNCiAgICBmZXRjaERhdGEoKSB7DQogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZQ0KICAgICAgZmV0Y2hMaXN0KHRoaXMubGlzdFF1ZXJ5KS50aGVuKHJlc3BvbnNlID0+IHsNCiAgICAgICAgdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YS5pdGVtcw0KICAgICAgICB0aGlzLnRvdGFsID0gcmVzcG9uc2UuZGF0YS50b3RhbA0KICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlIH0sIDUwMCkNCiAgICAgIH0pDQogICAgfSwNCiAgICAgdGFibGVSb3dDbGFzc05hbWUoe3Jvdywgcm93SW5kZXh9KSB7DQogICAgICAgIGlmIChyb3dJbmRleCUyPT0xKSB7DQogICAgICAgICAgcmV0dXJuICd3YXJuaW5nLXJvdyc7DQogICAgICAgIH0gZWxzZSBpZiAocm93SW5kZXglMj09MCkgew0KICAgICAgICAgIHJldHVybiAnc3VjY2Vzcy1yb3cnOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiAnJzsNCg0KICAgIH0sDQogICAgaGFuZGxlRmlsdGVyKCkgew0KICAgICAgY29uc29sZS5sb2coJ3NlYXJjaCcsIHRoaXMubGlzdFF1ZXJ5LnVzZXJuYW1lKQ0KICAgICAgdGhpcy5mZXRjaERhdGEoKQ0KICAgIH0sDQoNCiAgICAvLyBvcGVuIHRoZSBkaWFsb2cNCiAgICBoYW5kbGVDcmVhdGUoKSB7DQogICAgICB0aGlzLnJlc2V0VGVtcCgpDQogICAgICB0aGlzLmRpYWxvZ1N0YXR1cyA9ICdjcmVhdGUnDQogICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gdHJ1ZQ0KICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gew0KICAgICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLmNsZWFyVmFsaWRhdGUoKQ0KICAgICAgfSkNCiAgICB9LA0KDQogICAgLy8gYWRkIGEgbWVtZWJlcg0KICAgIGNyZWF0ZURhdGEoKSB7DQogICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLnZhbGlkYXRlKHZhbGlkID0+IHsNCiAgICAgICAgaWYgKHZhbGlkKSB7DQogICAgICAgICAgdGhpcy50ZW1wLmlkID0gcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIDEwMCkgKyAxMDI0IC8vIG1vY2sgYSBpZA0KICAgICAgICAgIHRoaXMudGVtcC5hdXRob3IgPSAndnVlLWVsZW1lbnQtYWRtaW4nDQogICAgICAgICAgY3JlYXRlTWVtYmVyKHRoaXMudGVtcCkudGhlbigoKSA9PiB7DQogICAgICAgICAgICB0aGlzLmxpc3QudW5zaGlmdCh0aGlzLnRlbXApDQogICAgICAgICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2UNCiAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7DQogICAgICAgICAgICAgIHRpdGxlOiAnU3VjY2VzcycsDQogICAgICAgICAgICAgIG1lc3NhZ2U6ICdDcmVhdGVkIFN1Y2Nlc3NmdWxseScsDQogICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywNCiAgICAgICAgICAgICAgZHVyYXRpb246IDIwMDAgfSkNCiAgICAgICAgICB9KQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQoNCiAgICBoYW5kbGVVcGRhdGUocm93KSB7DQogICAgICB0aGlzLnRlbXAgPSBPYmplY3QuYXNzaWduKHt9LCByb3cpIC8vIGNvcHkgb2JqDQogICAgICB0aGlzLnRlbXAudGltZXN0YW1wID0gbmV3IERhdGUodGhpcy50ZW1wLnRpbWVzdGFtcCkNCiAgICAgIHRoaXMuZGlhbG9nU3RhdHVzID0gJ3VwZGF0ZScNCiAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSB0cnVlDQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7DQogICAgICAgIHRoaXMuJHJlZnNbJ2RhdGFGb3JtJ10uY2xlYXJWYWxpZGF0ZSgpDQogICAgICB9KQ0KICAgIH0sDQpoYW5kbGVEZWxldGUoaW5kZXgscm93cykgeyAgDQogICAgIHJvd3Muc3BsaWNlKGluZGV4LDEpDQogICAgICB9LA0KDQogICAgdXBkYXRlRGF0YSgpIHsNCiAgICAgIHRoaXMuJHJlZnNbJ2RhdGFGb3JtJ10udmFsaWRhdGUodmFsaWQgPT4gew0KICAgICAgICBpZiAodmFsaWQpIHsNCiAgICAgICAgICBjb25zdCB0ZW1wRGF0YSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMudGVtcCkNCiAgICAgICAgICB0ZW1wRGF0YS50aW1lc3RhbXAgPSArbmV3IERhdGUodGVtcERhdGEudGltZXN0YW1wKSAvLyBjaGFuZ2UgVGh1IE5vdiAzMCAyMDE3IDE2OjQxOjA1IEdNVCswODAwIChDU1QpIHRvIDE1MTIwMzEzMTE0NjQNCiAgICAgICAgICB1cGRhdGVNZW1iZXIodGVtcERhdGEpLnRoZW4oKCkgPT4gew0KICAgICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmxpc3QuZmluZEluZGV4KHYgPT4gdi5pZCA9PT0gdGhpcy50ZW1wLmlkKQ0KICAgICAgICAgICAgdGhpcy5saXN0LnNwbGljZShpbmRleCwgMSwgdGhpcy50ZW1wKQ0KICAgICAgICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IGZhbHNlDQogICAgICAgICAgICB0aGlzLiRub3RpZnkoew0KICAgICAgICAgICAgICB0aXRsZTogJ1N1Y2Nlc3MnLA0KICAgICAgICAgICAgICBtZXNzYWdlOiAnVXBkYXRlIFN1Y2Nlc3NmdWxseScsDQogICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywNCiAgICAgICAgICAgICAgZHVyYXRpb246IDIwMDANCiAgICAgICAgICAgIH0pDQogICAgICAgICAgfSkNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9LA0KDQogICAgcmVzZXRUZW1wKCkgew0KICAgICAgdGhpcy50ZW1wID0geyBpZDogdW5kZWZpbmVkLCByZW1hcms6ICcnLCB0aW1lc3RhbXA6IG5ldyBEYXRlKCksIHRpdGxlOiAnJywgdHlwZTogJycNCiAgICAgIH0NCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"index.vue","sourceRoot":"src/views/member","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div class=\"filter-container\" style=\"margin-bottom:10px\">\r\n      <el-input\r\n        v-model=\"listQuery.username\"\r\n        placeholder=\"昵称\"\r\n        style=\"width: 200px\"\r\n        class=\"filter-item\"\r\n        @keyup.enter.native=\"handleFilter\"\r\n      />\r\n      <el-select\r\n        v-model=\"listQuery.type\"\r\n        placeholder=\"角色\"\r\n        clearable\r\n        class=\"filter-item\"\r\n        style=\"width: 150px\"\r\n      >\r\n        <el-option\r\n          v-for=\"item in userTypeOptions\"\r\n          :key=\"item.key\"\r\n          :label=\"item.display_name+'('+item.key+')'\"\r\n          :value=\"item.key\"\r\n        />\r\n      </el-select>\r\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" style=\"margin-left:20px\" @click=\"handleFilter\">搜索</el-button>\r\n      <el-button\r\n        class=\"filter-item\"\r\n        style=\"margin-left: 10px\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-edit\"\r\n        @click=\"handleCreate\"\r\n      >新建</el-button>\r\n    </div>\r\n    <el-table\r\n      v-loading=\"listLoading\"\r\n      :data=\"list\"\r\n      element-loading-text=\"Loading\"\r\n      border\r\n      fit\r\n      highlight-current-row\r\n      :row-class-name=\"tableRowClassName\"\r\n      :default-sort = \"{prop: 'type', order: 'ascending'}\"\r\n    >\r\n      <el-table-column align=\"center\" label=\"ID\" width=\"95\">\r\n        <template slot-scope=\"scope\">{{ scope.$index }}</template>\r\n      </el-table-column>\r\n      <el-table-column label=\"用户名\">\r\n        <template slot-scope=\"scope\">{{ scope.row.username }}</template>\r\n      </el-table-column>\r\n      <el-table-column label=\"类型\" width=\"150\" align=\"center\" prop=\"type\">\r\n        <template slot-scope=\"scope\">\r\n            <span v-if=\"scope.row.type=='admin'\">管理员（Admin)</span>\r\n            <span v-else-if=\"scope.row.type=='editor'\">编辑者(Editor)</span>\r\n            <span v-else-if=\"scope.row.type=='visitor'\">游客(Visitor)</span>\r\n              <span v-else-if=\"scope.row.type=='superAdmin'\">超级管理员(SuperAdmin)</span>\r\n            \r\n            </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"注册时间\" width=\"180px\" align=\"center\">\r\n        <template slot-scope=\"{row}\">\r\n          <span>{{ row.registerTime  }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      \r\n<el-table-column label=\"操作\">\r\n      <template slot-scope=\"scope\">\r\n   <el-button type=\"primary\" size=\"medium\" @click=\"handleUpdate(scope.row)\">编辑</el-button>\r\n    <el-button  type=\"danger\" size=\"medium\" @click=\"handleDelete(scope.$index,list)\">删除</el-button>\r\n      </template>\r\n    </el-table-column>\r\n\r\n    </el-table>\r\n    <pagination\r\n      v-show=\"total > 0\"\r\n      :total=\"total\"\r\n      :page.sync=\"listQuery.page\"\r\n      :limit.sync=\"listQuery.limit\"\r\n      @pagination=\"fetchData\"\r\n    />\r\n    <!-- 弹出对话框，用于新建用户 -->\r\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form\r\n        ref=\"dataForm\"\r\n        :rules=\"rules\"\r\n        :model=\"temp\"\r\n        label-position=\"left\"\r\n        label-width=\"70px\"\r\n        style=\"width: 400px margin-left:50px\"\r\n      >\r\n        <el-form-item label=\"昵称\" prop=\"username\">\r\n          <el-input v-model=\"temp.username\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"temp.password\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"类型\" prop=\"type\">\r\n          <el-select\r\n            v-model=\"temp.type\"\r\n            class=\"filter-item\"\r\n            placeholder=\"Please select\"\r\n          ><el-option v-for=\"item in userTypeOptions\" :key=\"item.key\" :label=\"item.display_name\" :value=\"item.key\" /></el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"添加时间\" prop=\"timestamp\">\r\n          <el-date-picker\r\n            v-model=\"temp.timestamp\"\r\n            type=\"datetime\"\r\n            placeholder=\"Please pick a date\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\">\r\n          <el-input\r\n            v-model=\"temp.remark\"\r\n            :autosize=\"{ minRows: 2, maxRows: 4 }\"\r\n            type=\"textarea\"\r\n            placeholder=\"Please input\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"dialogStatus==='create'?createData():updateData()\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <!-- 弹出对话框，用于新建用户 end-->\r\n  </div>\r\n</template>\r\n<style>\r\n .el-table .warning-row {\r\n    background: oldlace;\r\n  }\r\n\r\n  .el-table .success-row {\r\n    background: #f0f9eb;\r\n  }\r\n</style>\r\n<script>\r\nimport { fetchList, createMember, updateMember } from '@/api/member'\r\nimport { parseTime } from '@/utils'\r\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\r\n\r\nconst userTypeOptions = [\r\n  { key: 'admin', display_name: '管理员(admin)' },\r\n  { key: 'editor', display_name: '编辑(editor)' },\r\n  { key: 'visitor', display_name: '游客(visitor)' }\r\n]\r\n\r\nexport default {\r\n  components: { Pagination },\r\n  filters: {\r\n    statusFilter(status) {\r\n      const statusMap = { published: 'success', draft: 'gray', deleted: 'danger'\r\n      }\r\n      return statusMap[status]\r\n    },\r\n    parseTime(time, cFormat) {\r\n      return parseTime(time, cFormat)\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      listLoading: true,\r\n      total: 0,\r\n      listQuery: { page: 1, limit: 20, username: undefined, type: undefined, sort: '+id'\r\n      },\r\n      userTypeOptions,\r\n      sortOptions: [{ label: 'ID Ascending', key: '+id' }, { label: 'ID Descending', key: '-id' }\r\n      ],\r\n      temp: { id: undefined, remark: '', timestamp: new Date(), username: '', password: '', type: ''},\r\n      dialogFormVisible: false,\r\n      dialogStatus: '',\r\n      textMap: { update: '编辑', create: '新建' },\r\n      // 编辑用户信息-表单验证\r\n      rules: {\r\n        username: [{\r\n          required: true, message: 'username is required', trigger: 'blur' }],\r\n        password: [{ required: true, message: 'password is required', trigger: 'blur' }],\r\n        type: [{ required: true, message: 'type is required', trigger: 'change' }],\r\n        timestamp: [{ type: 'date', required: true, message: 'timestamp is required', trigger: 'change' }]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    // get memebers list\r\n    fetchData() {\r\n      this.listLoading = true\r\n      fetchList(this.listQuery).then(response => {\r\n        this.list = response.data.items\r\n        this.total = response.data.total\r\n        setTimeout(() => { this.listLoading = false }, 500)\r\n      })\r\n    },\r\n     tableRowClassName({row, rowIndex}) {\r\n        if (rowIndex%2==1) {\r\n          return 'warning-row';\r\n        } else if (rowIndex%2==0) {\r\n          return 'success-row';\r\n        }\r\n        return '';\r\n\r\n    },\r\n    handleFilter() {\r\n      console.log('search', this.listQuery.username)\r\n      this.fetchData()\r\n    },\r\n\r\n    // open the dialog\r\n    handleCreate() {\r\n      this.resetTemp()\r\n      this.dialogStatus = 'create'\r\n      this.dialogFormVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].clearValidate()\r\n      })\r\n    },\r\n\r\n    // add a memeber\r\n    createData() {\r\n      this.$refs['dataForm'].validate(valid => {\r\n        if (valid) {\r\n          this.temp.id = parseInt(Math.random() * 100) + 1024 // mock a id\r\n          this.temp.author = 'vue-element-admin'\r\n          createMember(this.temp).then(() => {\r\n            this.list.unshift(this.temp)\r\n            this.dialogFormVisible = false\r\n            this.$notify({\r\n              title: 'Success',\r\n              message: 'Created Successfully',\r\n              type: 'success',\r\n              duration: 2000 })\r\n          })\r\n        }\r\n      })\r\n    },\r\n\r\n    handleUpdate(row) {\r\n      this.temp = Object.assign({}, row) // copy obj\r\n      this.temp.timestamp = new Date(this.temp.timestamp)\r\n      this.dialogStatus = 'update'\r\n      this.dialogFormVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].clearValidate()\r\n      })\r\n    },\r\nhandleDelete(index,rows) {  \r\n     rows.splice(index,1)\r\n      },\r\n\r\n    updateData() {\r\n      this.$refs['dataForm'].validate(valid => {\r\n        if (valid) {\r\n          const tempData = Object.assign({}, this.temp)\r\n          tempData.timestamp = +new Date(tempData.timestamp) // change Thu Nov 30 2017 16:41:05 GMT+0800 (CST) to 1512031311464\r\n          updateMember(tempData).then(() => {\r\n            const index = this.list.findIndex(v => v.id === this.temp.id)\r\n            this.list.splice(index, 1, this.temp)\r\n            this.dialogFormVisible = false\r\n            this.$notify({\r\n              title: 'Success',\r\n              message: 'Update Successfully',\r\n              type: 'success',\r\n              duration: 2000\r\n            })\r\n          })\r\n        }\r\n      })\r\n    },\r\n\r\n    resetTemp() {\r\n      this.temp = { id: undefined, remark: '', timestamp: new Date(), title: '', type: ''\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"]}]}